<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fboard"> <!-- 회원 정보가 들어가는 공간 -->
	<insert id ="join" parameterType = "UserDTO">
		insert into tbl_user(user_email,user_password,user_nickname,user_date,user_level)
		value(#{userEmail},#{userPassword},#{userNickname},#{userDate},#{userLevel})
	</insert>
	
	<!-- member+board 모두 필요하기에 join 사용 -->
	<!-- join을 사용할때는 선행이 행수가 적어야 한다. -->
	<!-- member가 갯수가 적기 때문에 선행되어 작성 -->
	<select id="selectAll" resultType ="FboardVO"> <!-- 테이블과 일치하지 않는 결과값을 얻기 위해 VO를 사용한다. -->
		select u.user_number, u.user_nickname, f.fboard_number, f.fboard_title, f.fboard_content, 
		f.fboard_date, f.fboard_count ㄴ
		from tbl_user u join tbl_fboard  f 
		on u.user_number = f.user_number 
	</select>
	
	<!-- 게시글 보기 쿼리 -->
	<select id="selectAll2" parameterType = "FboardVO" resultType ="FboardVO"> <!-- 테이블과 일치하지 않는 결과값을 얻기 위해 VO를 사용한다. -->
		SELECT u.user_number, u.user_nickname, f.fboard_number, f.fboard_title, f.fboard_content, f.fboard_date, f.fboard_count 
		FROM tbl_user u INNER JOIN tbl_fboard f 
		ON u.user_number = f.user_number 
		WHERE f.fboard_number = #{fboardNumber};
	</select>

	
	<select id="getTotalCount" resultType="int">
    	SELECT COUNT(*) FROM tbl_fboard
	</select>
	
	<!-- 자우게시판 게시글 데이터 삽입 -->
	<insert id="insert" parameterType="FboardDTO">
		INSERT INTO tbl_fboard 
		(user_number, fboard_title, fboard_date, fboard_content, fboard_count) 
		VALUES (#{userNumber},#{fboardTitle},#{fboardDate},#{fboardContent},#{fboardCount})
	</insert>
	
	<delete id="delete" parameterType="_int">
		delete from tbl_fboard where fboard_number = #{fboardNumber}
	</delete>
	
	<!-- 자유게시판 게시글 수정 -->
	<update id="update" parameterType="FboardDTO">
		update tbl_fboard
		set fboard_title = #{fboardTitle}, fboard_content = #{fboardContent}
		where fboard_number = #{fboardNumber}
	</update>
	
	<!-- 자유게시판 조회수 카운터 -->
	<update id="countUpdate" parameterType="int">
		UPDATE tbl_fboard
		SET fboard_count = fboard_count + 1
		WHERE fboard_number = #{fboardNumber}
	</update>
	
	<!-- 페이징 처리 쿼리 및 제목 검색 쿼리 통합 -->
	<select id="searchByTitlepage" resultType="FboardVO" parameterType="map">
	    select u.user_number, u.user_nickname, u.user_Email, f.fboard_number, f.fboard_title, f.fboard_content, f.fboard_date, f.fboard_count
	    from tbl_user u join tbl_fboard f
	    on u.user_number = f.user_number
    	where f.fboard_title like CONCAT('%', #{searchVO.keyword}, '%') 
	    order by f.fboard_number DESC 
	    LIMIT #{startRow}, 10
	</select>
	
	<!-- 페이징 처리 쿼리 및 닉네임 검색 쿼리 통합 -->
	<select id="searchByNicknamepage" resultType="FboardVO" parameterType="map">
	    select u.user_number, u.user_nickname, u.user_Email, f.fboard_number, f.fboard_title, f.fboard_content, f.fboard_date, f.fboard_count
	    from tbl_user u join tbl_fboard f
	    on u.user_number = f.user_number
    	where u.user_nickname like CONCAT('%', #{searchVO.keyword}, '%')
	    order by f.fboard_number DESC 
	    LIMIT #{startRow}, 10
	</select>
	
	<!-- 페이징 처리 쿼리 및 내용 검색 쿼리 통합 -->
	<select id="searchByFbContentpage" resultType="FboardVO" parameterType="map">
	    select u.user_number, u.user_nickname, u.user_Email, f.fboard_number, f.fboard_title, f.fboard_content, f.fboard_date, f.fboard_count
	    from tbl_user u join tbl_fboard f
	    on u.user_number = f.user_number
    	where f.fboard_content like CONCAT('%', #{searchVO.keyword}, '%')
	    order by f.fboard_number DESC 
	    LIMIT #{startRow}, 10
	</select>
	

</mapper>










