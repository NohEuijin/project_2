<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user"> <!-- 회원 정보가 들어가는 공간 -->
	<insert id ="join" parameterType = "UserDTO">
		insert into tbl_user(user_email,user_nickname,user_password,user_date,user_level)
		value(#{userEmail},#{userNickname},#{userPassword},#{userDate},#{userLevel})
	</insert>
	
	<select id = "login" parameterType = "UserDTO" resultType = "UserDTO">
		select user_number, user_nickname, user_email from tbl_user where user_email = #{userEmail} AND user_password = #{userPassword}
	</select>
	
	<!-- 아이디의 중복 검사 쿼리 -->
	<select id="checkEmail" parameterType="string" resultType="_int">
		select count(user_number) from tbl_user
		where user_email = #{userEmail}
	</select>
	
	<!-- 넥네임 중복 검사 쿼리 -->
	<select id="checkNickname" parameterType="string" resultType="_int">
		select count(user_number) from tbl_user
		where user_nickname = #{userNickname}
	</select>
	
	<!-- 글쓰기 쿼리-->
	<select id="getUserNickname" parameterType="_int" resultType="string">
		select user_nickname from tbl_user where user_number = #{userNumber}
	</select>
	
	<!-- 관리자 레벨 쿼리-->
	<select id="getUserLevel" parameterType="_int" resultType="string">
		select user_level from tbl_user where user_number = #{userNumber}
	</select>
	
	<update id="updateUserNickname" parameterType="UserDTO">
		update tbl_user
		set user_nickname = #{userNickname}
		where user_number = #{userNumber}
	</update>
	
	<update id="updateUserPassword" parameterType="UserDTO">
		update tbl_user
		set user_password = #{userPassword}
		where user_number = #{userNumber}
	</update>
	
	<delete id="deleteUser" parameterType="_int">
		delete from tbl_user where user_number = #{userNumber}
	</delete>

	<!-- 관리자 부분 -->
	<delete id="deleteAdminUser" parameterType="int">
		delete from tbl_user where user_number = #{userNumber}
	</delete>
	
	
	<select id="getTotalCount" resultType="int">
    	SELECT COUNT(*) FROM tbl_user
	</select>
	
	<!-- 관리자가 회원의 모든 정보를 출력! -->
	<select id="getMemberInfo" parameterType="UserDTO" resultType="UserDTO">
		SELECT user_number, user_email, user_nickname, user_password, user_date, user_level
		FROM tbl_user
	</select>
	
	<!-- 관리자가(회원관리)페이징 처리 및 이메일 검색 쿼리 통합 -->
	<select id="searchByEmailpage" resultType="UserDTO" parameterType="map">
		SELECT user_number, user_email, user_nickname, user_date
		FROM tbl_user
		where user_email like CONCAT('%', #{searchVO.keyword}, '%')
		order by user_date DESC 
		LIMIT #{startRow}, 10
	</select>
	
	<!-- 관리자가(회원관리)페이징 처리 및 닉네임 검색 쿼리 통합 -->
	<select id="searchByNicknamepage" resultType="UserDTO" parameterType="map">
		SELECT user_number, user_email, user_nickname, user_date
		FROM tbl_user
		where user_nickname like CONCAT('%', #{searchVO.keyword}, '%')
		order by user_date DESC 
		LIMIT #{startRow}, 10
	</select>
	
	<!-- 관리자가(회원글관리)페이징 처리 및 제목 검색 쿼리 통합 -->
	<select id="searchAdminByTitlepage" parameterType="SearchVO" resultType ="UserVO"> 
		select u.user_number, u.user_nickname, 
		f.fboard_number, f.fboard_title, f.fboard_date, f.fboard_count
		from tbl_user u join tbl_fboard f 
		on u.user_number = f.user_number
		where f.fboard_title like CONCAT('%', #{searchVO.keyword}, '%')
		order by f.fboard_date DESC 
		LIMIT #{startRow}, 10
	</select>
	
	<!-- 관리자가(회원글관리)페이징 처리 및 제목 검색 쿼리 통합 -->
	<select id="searchAdminByNicknamepage" parameterType="SearchVO" resultType ="UserVO"> 
		select u.user_number, u.user_nickname, 
		f.fboard_number, f.fboard_title, f.fboard_date, f.fboard_count
		from tbl_user u join tbl_fboard f 
		on u.user_number = f.user_number
		where u.user_nickname like CONCAT('%', #{searchVO.keyword}, '%')
		order by f.fboard_date DESC 
		LIMIT #{startRow}, 10
	</select>

	
	
	
</mapper>





